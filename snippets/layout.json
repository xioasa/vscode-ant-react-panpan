{
  "index.child": {
    "prefix": ".index.child",
    "body": [
      "import React from 'react';",
      "import { connect } from 'react-redux';",
      "import { Scrollbars } from 'react-custom-scrollbars';",
      "import { message, Table, DatePicker, Button, Form, Input, Row, Col, Modal, Radio, TimePicker, Popconfirm, Select, Tabs } from 'antd';",
      "import { util } from 'util';",
      "import { PageWrapper, Patient } from 'component';",
      "import {",
      "  fetchactionFunction",
      "} from './action';",
      "const Header = PageWrapper.Header;",
      "const Bodyer = PageWrapper.Bodyer;",
      "const Footer = PageWrapper.Footer;",
      "const FormItem = Form.Item;",
      "class $1 extends React.Component {",
      "  state = {}",
      "  componentDidMount() {",
      "  }",
      "",
      "  render() {",
      "    return (",
      "      <PageWrapper diff={80} border>",
      "        <Header>",
      "        </Header>",
      "        <Bodyer>",
      "        </Bodyer>",
      "        <Footer>",
      "        </Footer>",
      "      </PageWrapper>",
      "    );",
      "  }",
      "}",
      "export default connect((state) => {",
      "  return {",
      "    data: state,",
      "    cache: state,",
      "  };",
      "})(Form.create()($1));",
      ""
    ],
    "description": "index页面构建包含<Header /><Bodyer /><Footer />"
  },
  "index": {
    "prefix": ".index",
    "body": [
      "import React from 'react';",
      "import { connect } from 'react-redux';",
      "import { Scrollbars } from 'react-custom-scrollbars';",
      "import { message, Table, DatePicker, Button, Form, Input, Row, Col, Modal, Radio, TimePicker, Popconfirm, Select, Tabs } from 'antd';",
      "import { util } from 'util';",
      "import { PageWrapper, Patient } from 'component';",
      "import {",
      "  fetchactionFunction",
      "} from './action';",
      "const Header = PageWrapper.Header;",
      "const Bodyer = PageWrapper.Bodyer;",
      "const Footer = PageWrapper.Footer;",
      "const FormItem = Form.Item;",
      "class $1 extends React.Component {",
      "  state = {}",
      "  componentDidMount() {",
      "  }",
      "",
      "  render() {",
      "    return (",
      "      <PageWrapper diff={80} border>",
      "      </PageWrapper>",
      "    );",
      "  }",
      "}",
      "export default connect((state) => {",
      "  return {",
      "    data: state,",
      "    cache: state,",
      "  };",
      "})(Form.create()($1));",
      ""
    ],
    "description": "index页面构建不包含<Header /><Bodyer /><Footer />"
  },
  "action": {
    "prefix": ".action",
    "body": [
      " import { fetchutil, util } from 'util';",
      "",
      " /**",
      "  * 提交数据",
      "  * @return {[type]} [description]",
      "  */",
      " export function submit(param) {",
      "   return (dispatch) => {",
      "     return fetchutil.post('', { param });",
      "   };",
      " }",
      "",
      " /**",
      "  * 获取数据",
      "  * @return {[type]} [description]",
      "  */",
      " export function fetch(param) {",
      "   return (dispatch) => {",
      "     return fetchutil.get('', { param }).then((res) => {",
      "       // if (res)",
      "     });",
      "   };",
      " }",
      ""
    ],
    "description": "action文件"
  },
  "reducer": {
    "prefix": ".reducer",
    "body": [
      " import { combineReducers } from 'redux';",
      "",
      " /**",
      "  * 数据列表",
      "  * @param  {Array}  state  [description]",
      "  * @param  {[type]} action [description]",
      "  * @return {[type]}        [description]",
      "  */",
      " const list = (state = { list: [] }, action) => {",
      "   switch (action.type) {",
      "     case 'FETCH_LIST':",
      "       return action.data;",
      "     default:",
      "       return state;",
      "   }",
      " };",
      "",
      " // 合并多个reuucer",
      " export default combineReducers({",
      "   list",
      " });",
      ""
    ],
    "description": "action文件"
  }
}